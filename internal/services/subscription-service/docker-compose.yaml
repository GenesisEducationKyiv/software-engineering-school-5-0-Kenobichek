version: '3.8'
services:
  db:
    image: postgres:latest
    container_name: subscription-db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT:-5433}:5432"
    volumes:
      - pgdata-subscription:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - weather-net

  subscription-service:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: subscription-service
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${PORT}:${PORT}"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:${PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    volumes:
      - ./:/app
    networks:
      - weather-net

  victoria-metrics:
    image: victoriametrics/victoria-metrics:v1.96.0
    container_name: victoria-metrics
    command:
      - '--httpListenAddr=:8428'
      - '--promscrape.config=/etc/prometheus/prometheus.yml'
      - '--promscrape.config.strictParse=false'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "${VICTORIA_METRICS_PORT:-8428}:8428"
    networks: 
      weather-net:
        aliases:
          - victoria-metrics
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1:8428/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    

  grafana:
    image: grafana/grafana:10.4.2
    container_name: grafana
    volumes:
      - ./grafana-provisioning:/etc/grafana/provisioning
      - ./grafana-provisioning/dashboards:/var/lib/grafana/dashboards:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    ports:
      - "${GRAFANA_PORT}:3000"
    depends_on:
      victoria-metrics:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - weather-net

volumes:
  pgdata-subscription:

networks:
  weather-net:
    external: true
    name: software-engineering-school-5-0-kenobichek_default 