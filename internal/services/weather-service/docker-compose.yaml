version: '3.8'
services:
  weather-service:
    build: .
    env_file:
      - .env
    ports:
      - "${PORT}:${PORT}"
    networks:
      - weather-net

  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    networks:
      - weather-net


networks:
  weather-net:
    external: true
    name: software-engineering-school-5-0-kenobichek_default 


  # redis:
  #   image: redis:7-alpine
  #   container_name: weather-redis
  #   ports:
  #     - "${REDIS_PORT:-6379}:6379"
  #   volumes:
  #     - redisdata:/data
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: ${HEALTH_CHECK_INTERVAL:-10s}
  #     retries: ${HEALTH_CHECK_RETRIES:-5}
  #     start_period: ${HEALTH_CHECK_START_PERIOD:-30s}
  #     timeout: ${HEALTH_CHECK_TIMEOUT:-10s}

  # redis-exporter:
  #   image: oliver006/redis_exporter:latest
  #   container_name: weather-redis-exporter
  #   ports:
  #     - "${REDIS_EXPORTER_PORT:-9121}:9121"
  #   environment:
  #     REDIS_ADDR: "redis://redis:6379"
  #     REDIS_PASSWORD: "${REDIS_PASSWORD:-}"
  #   depends_on:
  #     redis:
  #       condition: service_healthy
  #   restart: ${CONTAINER_RESTART_POLICY:-unless-stopped}

  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: weather-prometheus
  #   ports:
  #     - "${PROMETHEUS_PORT:-9090}:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus_data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/etc/prometheus/console_libraries'
  #     - '--web.console.templates=/etc/prometheus/consoles'
  #     - '--storage.tsdb.retention.time=${PROMETHEUS_RETENTION_TIME:-200h}'
  #     - '--web.enable-lifecycle'
  #   depends_on:
  #     - redis-exporter
  #   restart: ${CONTAINER_RESTART_POLICY:-unless-stopped}

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: weather-grafana
  #   ports:
  #     - "${GRAFANA_PORT:-3000}:3000"
  #   environment:
  #     GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-admin}
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #     - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
  #     - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
  #   depends_on:
  #     - prometheus
  #   restart: ${CONTAINER_RESTART_POLICY:-unless-stopped}
