version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: weather-api
    ports:
      - "${PORT}:${PORT}"
    volumes:
      - ./:/app
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    image: postgres:latest
    container_name: weather-db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGPORT: ${DB_PORT}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  redis:
    image: redis:7-alpine
    container_name: weather-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  # migrate:
  #   image: migrate/migrate
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   volumes:
  #     - ./migrations/:/migrations
  #   command: ["-path", "/migrations/", "-database", "postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable", "up"]

volumes:
  pgdata:
  redisdata: